/************************************************/
/*   Project Name: Probalize.css                */
/*   Creator: 2025 (c) Fabien Conéjéro / FC84   */
/*   MIT Project                                */
/************************************************/

/***********************************************
📌 Probalize.css Project - Executive Summary
🎯 Purpose & Role
Probalize.css is an open-source CSS micro-framework designed to automate consistent spacing and solve common layout issues (flow, margins, grids) without bloating HTML.
✨ Key Features
- REM-based spacing scale system
- Flow issues correction (flow-root, gap)
- Smart reset (images, links, typography)
- Built-in RTL and responsive compatibility
👥 For Whom?
- Front-end devs wanting a ready-to-use system
- Design teams seeking visual consistency
- Lean projects (no Bootstrap/Tailwind needed)
🛠 By Whom?
Fabien Conéjéro / FC84
📅 When?
Version 1.0: 2025
Updates: Active (latest release July 2025)
💡 Philosophy
"Fewer utility classes, more predictive styling."
🔗 Usage Example
css
/* Import 
@import url("probalize.css");

<!-- HTML -->
<article class="flow"> <!-- Auto-spacing -->
  <h2>Title</h2>
  <p>Content...</p>
</article>
🚀 Difference vs Tailwind/Bootstrap

Probalize.css              Tailwind    Bootstrap
Size            5KB         300KB+     200KB+
Approach        Systemic    Utilities  Components
Customization   CSS Vars    JS Config  SASS
Ideal for quick POCs, landing pages, and lightweight apps.

(GitHub-hosted, MIT licensed.)

TAGS:
#CSS #Framework #Spacing #DesignSystem #Accessibility
#Performance #OpenSource #Responsive #FrontEnd #UI
************************************************/

/* ============================================= */
/* MIT LICENSE                                   */
/* ============================================= */
/*
Copyright (c) 2025 Fabien Conéjéro
Permission is hereby granted... [rest of unchanged MIT license] */

/*
********************************************************************************************************************
    READ ME: This file contains only professional-grade solutions (active code). 
             Optimal approaches are documented as comments (inactive code).
********************************************************************************************************************
Best practices + HTML pitfalls to avoid */

/* *****************************************************************************************************
    C O D E   Z O N E :
🌟 Professional Solution for Paragraph Spacing (production-tested) 🌟
****************************************************************************************************** */
/* Step 1: Targeted normalization */
html{box-sizing:border-box;font-size:100%;}*,*::before,*::after{box-sizing:inherit;}
/* Step 2: Line-height-based spacing */
:root{--line-height:1.5;--space-unit:calc(1rem * var(--line-height));}
body{line-height:var(--line-height);}
/* Step 3: Paragraph system (core solution) */
p{margin:0;padding:0;&+p{margin-top:calc(var(--space-unit)*0.75);}}
/* Step 4: Contextual adaptations */
article>p:first-child{margin-top:0;}

/* Semantic HTML structure:
<article>
  <p>First paragraph with relevant content.</p>
  <p>Second paragraph with perfect spacing.</p>
  <p>Third paragraph with consistent spacing.</p>
</article>
🔍 Why this solution?
- Cross-browser consistency 🖥️🔧
- Proportional spacing 📏 
- Perfect accessibility ♿✅ 
- No empty DOM elements
- Easy maintenance 🛠️ 
- Semantic integrity 📚 */

/* *****************************************************************************************************
    E N D   O F   C O D E   Z O N E :
🌟 Professional Solution for Paragraph Spacing (production-tested) 🌟
****************************************************************************************************** */

/* *****************************************************************************************************
    C O D E   Z O N E :
🌟 Professional Image Spacing Solution (combines HTML5 semantics + modern CSS) 🌟
****************************************************************************************************** */
:root{--img-spacing:1.5rem;}
.img-container{display:block;margin-bottom:var(--img-spacing);}
img.spaced{display:block;margin-block-end:var(--img-spacing);}
figure{margin-block-end:var(--img-spacing);display:flow-root;}
.gallery{display:grid;grid-template-columns:repeat(auto-fill,minmax(250px,1fr));gap:var(--img-spacing);margin-block-end:var(--img-spacing);}

/* Responsive */
@media(max-width:768px){:root{--img-spacing:1rem;}.gallery{grid-template-columns:repeat(auto-fill,minmax(180px,1fr));}}
img.float-left{float:left;margin-inline-end:var(--img-spacing);margin-block-end:var(--img-spacing);}
.content::after{content:"";display:table;clear:both;}
img{aspect-ratio:16/9;object-fit:cover;width:100%;}
/* *****************************************************************************************************
    E N D   O F   C O D E   Z O N E : Image Spacing Solution
****************************************************************************************************** */